{"version":3,"sources":["store/actions/actionTypes.js","shared/utility.js","hoc/Aux/Aux.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","store/actions/index.js","components/Burger/BurgerIngredient/BurgerIngredient.css","axios-orders.js","components/Navigation/SideDrawer/SideDrawer.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Navigation/Toolbar/Toolbar.css","components/UI/Button/Button.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","hoc/Layout/Layout.css","assets/images/burger-logo.png","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","hoc/asyncComponent/asyncComponent.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENT_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isNumeric","test","aux","props","children","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","fetchIngredientsFailed","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","purchaseBurger","orderData","token","post","id","orderId","purchaseBurgerSuccess","purchaseBurgerFail","purchaseInit","fetchOrders","userId","queryParams","res","orders","fetchedOrders","key","push","err","authSuccess","idToken","logout","localStorage","removeItem","checkAuthTimeOut","expirationTime","setTimeout","auth","email","password","isSignUp","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","setAuthRedirectPath","path","authCheckState","getItem","module","exports","instance","create","baseURL","backdrop","show","className","classes","Backdrop","onClick","clicked","Modal","nextProps","nextState","this","modalClosed","style","transform","opacity","Component","button","Button","btnType","join","disabled","spinner","Loader","withErrorHandler","WrappedComponent","state","errorConfirmedHanlder","setState","reqInterceptor","interceptors","request","use","req","resInterceptor","eject","message","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","transfromedIngredients","Object","keys","map","igKey","Array","_","index","reduce","arr","el","concat","Burger","logo","Logo","height","src","burgerLogo","alt","NavigationItem","activeClassName","active","exact","to","link","navigationItem","NavigationItems","isAuthenticated","menuBtn","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Aux","closed","Layout","showSideDrawer","sideDrawerClosedHandler","tooglerSideDrawerHandler","prevState","Content","connect","buildControl","BuildControl","Label","label","Less","removed","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinueHandler","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","onInitPurchase","onInitIngredients","sum","disabledInfo","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","burgerBuilder","totalPrice","ingName","actions","Logout","onLogout","asyncComponent","importComponent","component","cmp","default","C","asyncAuth","asyncCheckout","asyncOrders","App","onTryAutoSignUp","routes","withRouter","Boolean","window","location","hostname","match","initialState","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","action","updatedIngredient","updatedState","updatedIng","updatedSt","setIngredient","undefined","reducer","loading","purchased","purchaseBurgerStart","newOrder","purchaseBurgerFailed","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFailed","authRedirectPath","authStart","authFail","authLogout","composeEnhancers","compose","rootReducer","combineReducers","authReducer","burgerBuilderReducer","order","orderReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f7ba28b.chunk.js","sourcesContent":["export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENT_FAILED = 'FETCH_INGREDIENT_FAILED';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  };\n};\n\nexport const checkValidity = (value, rules) => {\n  let isValid = true;\n\n  if (!rules) {\n    return true;\n  }\n\n  if (rules.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = value.length >= rules.minLength && isValid;\n  }\n\n  if (rules.maxLength) {\n    isValid = value.length <= rules.maxLength && isValid;\n  }\n\n  // if(rules.isEmail){\n  //   const pattern = /[a-z0-9!#$%&'*+?^_`{|}~-]+(?:\\.[a-z0-9!#$%%&'*+/=?^_`{|}])/\n  //   isValid = pattern.test(value) & isValid\n  // }\n\n  if (rules.isNumeric) {\n    const pattern = /^\\d+$/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  return isValid;\n};\n","const aux = props => props.children;\n\nexport default aux;\n","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const addIngredient = name => {\n  return {\n    type: actionTypes.ADD_INGREDIENT,\n    ingredientName: name\n  };\n};\n\nexport const removeIngredient = name => {\n  return {\n    type: actionTypes.REMOVE_INGREDIENT,\n    ingredientName: name\n  };\n};\n\nexport const setIngredients = ingredients => {\n  return {\n    type: actionTypes.SET_INGREDIENTS,\n    ingredients: ingredients\n  };\n};\n\nexport const fetchIngredientsFailed = () => {\n  return {\n    type: actionTypes.FETCH_INGREDIENT_FAILED\n  };\n};\n\nexport const initIngredients = () => {\n  return dispatch => {\n    //intercepting the initial dispatch request to run aSync code and the finally dispatch the action based on the response of the axios request\n    axios\n      .get('/ingredients.json')\n      .then(response => {\n        if (response) {\n          dispatch(setIngredients(response.data)); // sending data to redux reducer\n        } else {\n          dispatch(fetchIngredientsFailed());\n        }\n      })\n      .catch(error => {\n        fetchIngredientsFailed();\n      });\n  };\n};\n","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\n\nexport const purchaseBurgerFail = error => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error: error\n  };\n};\n\nexport const purchaseBurgerStart = () => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_START\n  };\n};\n\nexport const purchaseBurger = (orderData, token) => {\n  return dispatch => {\n    dispatch(purchaseBurgerStart());\n\n    axios\n      .post('/orders.json?auth=' + token, orderData)\n      .then(response => {\n        dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n      }) //saving order on the backend\n      .catch(error => {\n        dispatch(purchaseBurgerFail(error));\n      });\n  };\n};\n\nexport const purchaseInit = () => {\n  return {\n    type: actionTypes.PURCHASE_INIT\n  };\n};\n\nexport const fetchOrdersSuccess = orders => {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders: orders\n  };\n};\n\nexport const fetchOrdersFail = error => {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAIL,\n    error: error\n  };\n};\n\nexport const fetchOrdersStart = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_START\n  };\n};\n\nexport const fetchOrders = (token, userId) => {\n  return dispatch => {\n    dispatch(fetchOrdersStart());\n    const queryParams =\n      '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n    axios\n      .get('/orders.json' + queryParams)\n      .then(res => {\n        const fetchedOrders = [];\n        for (let key in res.data) {\n          fetchedOrders.push({\n            ...res.data[key],\n            id: key\n          });\n        }\n        dispatch(fetchOrdersSuccess(fetchedOrders));\n      })\n      .catch(err => {\n        dispatch(fetchOrdersFail(err));\n      });\n  };\n};\n","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const authStart = () => {\n  return { type: actionTypes.AUTH_START };\n};\n\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    userId: userId,\n    idToken: token\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('userId');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeOut = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const auth = (email, password, isSignUp) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    let url =\n      'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyDEZngF9_R9gu7y3cahDajxNdNBTcoQwzA';\n\n    if (!isSignUp) {\n      url =\n        'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyDEZngF9_R9gu7y3cahDajxNdNBTcoQwzA';\n    }\n    axios\n      .post(url, authData)\n      .then(response => {\n        // console.log(response);\n        const expirationDate = new Date(\n          new Date().getTime() + response.data.expiresIn * 1000\n        );\n\n        localStorage.setItem('token', response.data.idToken);\n        localStorage.setItem('expirationDate', expirationDate);\n        localStorage.setItem('userId', response.data.localId);\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\n        dispatch(checkAuthTimeOut(response.data.expiresIn));\n      })\n      .catch(err => {\n        // console.log(err);\n        dispatch(authFail(err.response.data.error));\n      });\n  };\n};\n\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n      if (expirationDate > new Date()) {\n        const userId = localStorage.getItem('userId');\n        dispatch(authSuccess(token, userId));\n        dispatch(\n          checkAuthTimeOut(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      } else {\n        dispatch(logout());\n      }\n    }\n  };\n};\n","export {\n  addIngredient,\n  removeIngredient,\n  initIngredients\n} from './burgerBuilder';\n\nexport {\n  purchaseBurger,\n  purchaseBurgerStart,\n  purchaseInit,\n  fetchOrders\n} from './order';\n\nexport { auth, logout, setAuthRedirectPath, authCheckState } from './auth';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__HuxZP\",\"BreadTop\":\"BurgerIngredient__BreadTop__10-cT\",\"Seeds1\":\"BurgerIngredient__Seeds1__3xHtz\",\"Seeds2\":\"BurgerIngredient__Seeds2__1cUso\",\"Meat\":\"BurgerIngredient__Meat__13nAN\",\"Cheese\":\"BurgerIngredient__Cheese__1FxeY\",\"Salad\":\"BurgerIngredient__Salad__1iTJE\",\"Bacon\":\"BurgerIngredient__Bacon__3vrAI\"};","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://react-burger-builde.firebaseio.com/'\n});\n\nexport default instance;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer__21TuB\",\"Open\":\"SideDrawer__Open__1pVYR\",\"Close\":\"SideDrawer__Close__3Yv1l\",\"Logo\":\"SideDrawer__Logo__3TkPv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__1jYc3\",\"Label\":\"BuildControl__Label__33Z-p\",\"Less\":\"BuildControl__Less__377MJ\",\"More\":\"BuildControl__More__28-hQ\"};","import React from 'react';\nimport classes from './Backdrop.css';\n\nconst backdrop = props =>\n  props.show ? (\n    <div className={classes.Backdrop} onClick={props.clicked} />\n  ) : null;\n\nexport default backdrop;\n","import React, { Component } from 'react';\nimport classes from './Modal.css';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      nextProps.show !== this.props.show ||\n      nextProps.children !== this.props.children\n    );\n  }\n\n  render() {\n    return (\n      <Aux>\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n        <div\n          className={classes.Modal}\n          style={{\n            transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n            opacity: this.props.show ? '1' : '0'\n          }}\n        >\n          {this.props.children}\n        </div>\n      </Aux>\n    );\n  }\n}\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__2JJW-\",\"Logo\":\"Toolbar__Logo__1efBD\",\"DesktopOnly\":\"Toolbar__DesktopOnly__WADUd\"};","import React from 'react';\nimport classes from './Button.css';\n\nconst button = props => (\n  <button\n    className={[classes.Button, classes[props.btnType]].join(' ')}\n    onClick={props.clicked}\n    disabled={props.disabled}\n  >\n    {props.children}\n  </button>\n);\n\nexport default button;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem__23bcu\",\"active\":\"NavigationItem__active__2zJdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__3_01f\",\"OrderButton\":\"BuildControls__OrderButton__myBwT\",\"enable\":\"BuildControls__enable__3jYIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__QI7b2\",\"Success\":\"Button__Success__2dHUt\",\"Danger\":\"Button__Danger__2xnhN\"};","import React from 'react';\nimport classes from './Spinner.css';\n\nconst spinner = () => <div className={classes.Loader}>Loading...</div>;\n\nexport default spinner;\n","import React, { Component } from 'react';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\nimport axios from '../../axios-orders';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return class extends Component {\n    state = {\n      error: null\n    };\n    componentWillMount() {\n      this.reqInterceptor = axios.interceptors.request.use(req => {\n        this.setState({\n          error: null\n        });\n        return req;\n      });\n      this.resInterceptor = axios.interceptors.response.use(\n        res => res,\n        error => {\n          this.setState({\n            error: error\n          });\n        }\n      );\n    }\n\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.reqInterceptor);\n      axios.interceptors.response.eject(this.resInterceptor);\n    }\n\n    errorConfirmedHanlder = () => {\n      this.setState({ error: null });\n    };\n\n    render() {\n      return (\n        <Aux>\n          <Modal\n            show={this.state.error}\n            modalClosed={this.errorConfirmedHanlder}\n          >\n            {this.state.error ? this.state.error.message : null}\n          </Modal>\n          <WrappedComponent {...this.props} />\n        </Aux>\n      );\n    }\n  };\n};\n\nexport default withErrorHandler;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './BurgerIngredient.css';\n\nclass BurgerIngredient extends Component {\n  render() {\n    let ingredient = null;\n\n    switch (this.props.type) {\n      case 'bread-bottom':\n        ingredient = <div className={classes.BreadBottom} />;\n        break;\n      case 'bread-top':\n        ingredient = (\n          <div className={classes.BreadTop}>\n            <div className={classes.Seeds1} />\n            <div className={classes.Seeds2} />\n          </div>\n        );\n        break;\n      case 'meat':\n        ingredient = <div className={classes.Meat} />;\n        break;\n      case 'cheese':\n        ingredient = <div className={classes.Cheese} />;\n        break;\n      case 'bacon':\n        ingredient = <div className={classes.Bacon} />;\n        break;\n      case 'salad':\n        ingredient = <div className={classes.Salad} />;\n        break;\n      default:\n        ingredient = null;\n    }\n    return ingredient;\n  }\n}\n\nBurgerIngredient.propTypes = {\n  type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;\n","import React from 'react';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\nimport classes from './Burger.css';\n\nconst burger = props => {\n  let transfromedIngredients = Object.keys(props.ingredients)\n    .map(igKey => {\n      return [...Array(props.ingredients[igKey])].map((_, index) => {\n        return <BurgerIngredient key={igKey + index} type={igKey} />;\n      });\n    })\n    .reduce((arr, el) => {\n      return arr.concat(el);\n    }, []);\n\n  if (transfromedIngredients.length === 0) {\n    transfromedIngredients = <p>Please start adding ingredients!</p>;\n  }\n\n  return (\n    <div className={classes.Burger}>\n      <BurgerIngredient type='bread-top' />\n      {transfromedIngredients}\n      <BurgerIngredient type='bread-bottom' />\n    </div>\n  );\n};\n\nexport default burger;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__3pLYC\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__19WaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems___yd_d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle__DrawerToggle__26to0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__efy1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__32_-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__1DDwY\",\"load5\":\"Spinner__load5__3b3Nk\"};","import React from 'react';\nimport burgerLogo from '../../assets/images/burger-logo.png'; //webpack will copy this image to the public folder during deployment\nimport classes from './Logo.css';\n\nconst logo = props => (\n  <div className={classes.Logo} style={{ height: props.height }}>\n    <img src={burgerLogo} alt='MyBurger' />\n  </div>\n);\n\nexport default logo;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './NavigationItem.css';\n\nconst NavigationItem = props => (\n  <li className={classes.NavigationItem}>\n    <NavLink\n      activeClassName={classes.active}\n      exact={props.exact}\n      to={props.link}\n    >\n      {props.children}\n    </NavLink>\n  </li>\n);\n\nexport default NavigationItem;\n","import React from 'react';\nimport classes from './NavigationItems.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItem = props => (\n  <ul className={classes.NavigationItems}>\n    <NavigationItem link='/' exact>\n      Burger Builder\n    </NavigationItem>\n    {props.isAuthenticated ? (\n      <NavigationItem link='/orders'>Orders</NavigationItem>\n    ) : null}\n\n    {props.isAuthenticated ? (\n      <NavigationItem link='/logout'>Logout</NavigationItem>\n    ) : (\n      <NavigationItem link='/auth'>Authenticate</NavigationItem>\n    )}\n  </ul>\n);\n\nexport default navigationItem;\n","import React from 'react';\nimport classes from './DrawerToggle.css';\n\nconst menuBtn = props => (\n  <div className={classes.DrawerToggle} onClick={props.clicked}>\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default menuBtn;\n","import React from 'react';\nimport classes from './Toolbar.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = props => (\n  <header className={classes.Toolbar}>\n    <DrawerToggle clicked={props.drawerToggleClicked} />\n    <div className={classes.Logo}>\n      <Logo />\n    </div>\n    <nav className={classes.DesktopOnly}>\n      <NavigationItems isAuthenticated={props.isAuth} />\n    </nav>\n  </header>\n);\n\nexport default toolbar;\n","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\nimport classes from './SideDrawer.css';\n\nconst sideDrawer = props => {\n  let attachedClasses = [classes.SideDrawer, classes.Close];\n  if (props.open) {\n    attachedClasses = [classes.SideDrawer, classes.Open];\n  }\n  return (\n    <Aux>\n      <Backdrop show={props.open} clicked={props.closed} />\n      <div className={attachedClasses.join(' ')} onClick={props.closed}>\n        <div className={classes.Logo}>\n          <Logo />\n        </div>\n        <nav>\n          <NavigationItems isAuthenticated={props.isAuth} />\n        </nav>\n      </div>\n    </Aux>\n  );\n};\n\nexport default sideDrawer;\n","import React, { Component } from 'react';\nimport Aux from '../Aux/Aux';\nimport classes from './Layout.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\nimport { connect } from 'react-redux';\n\nclass Layout extends Component {\n  state = {\n    showSideDrawer: false\n  };\n\n  sideDrawerClosedHandler = () => {\n    this.setState({ showSideDrawer: false });\n  };\n\n  tooglerSideDrawerHandler = () => {\n    this.setState(prevState => ({\n      showSideDrawer: !prevState.showSideDrawer\n    })); //ensure the previous state is correct since seState is async\n  };\n\n  render() {\n    return (\n      <Aux>\n        <Toolbar\n          isAuth={this.props.isAuthenticated}\n          drawerToggleClicked={this.tooglerSideDrawerHandler}\n        />\n        <SideDrawer\n          isAuth={this.props.isAuthenticated}\n          open={this.state.showSideDrawer}\n          closed={this.sideDrawerClosedHandler}\n        />\n        <main className={classes.Content}>{this.props.children}</main>\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Layout);\n","import React from 'react';\nimport classes from './BuildControl.css';\n\nconst buildControl = props => (\n  <div className={classes.BuildControl}>\n    <div className={classes.Label}>{props.label}</div>\n    <button\n      className={classes.Less}\n      onClick={props.removed}\n      disabled={props.disabled}\n    >\n      Less\n    </button>\n    <button className={classes.More} onClick={props.added}>\n      More\n    </button>\n  </div>\n);\n\nexport default buildControl;\n","import React from 'react';\nimport classes from './BuildControls.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n  { label: 'Salad', type: 'salad' },\n  { label: 'Bacon', type: 'bacon' },\n  { label: 'Cheese', type: 'cheese' },\n  { label: 'Meat', type: 'meat' }\n];\n\nconst buildControls = props => {\n  return (\n    <div className={classes.BuildControls}>\n      <p>\n        Current Price: <strong>${props.price.toFixed(2)}</strong>\n      </p>\n      {controls.map(ctrl => (\n        <BuildControl\n          key={ctrl.label}\n          label={ctrl.label}\n          added={() => props.ingredientAdded(ctrl.type)}\n          removed={() => props.ingredientRemoved(ctrl.type)}\n          disabled={props.disabled[ctrl.type]}\n        />\n      ))}\n      <button\n        className={classes.OrderButton}\n        disabled={!props.purchasable}\n        onClick={props.ordered}\n      >\n        {props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}\n      </button>\n    </div>\n  );\n};\n\nexport default buildControls;\n","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button';\n\nclass OrderSummary extends Component {\n  //this could be a functional component. doesn't have to be a class\n\n  render() {\n    const ingredientSummary = Object.keys(this.props.ingredients).map(igKey => {\n      return (\n        <li key={igKey}>\n          <span style={{ textTransform: 'capitalize' }}> {igKey}</span>:\n          {this.props.ingredients[igKey]}\n        </li>\n      );\n    });\n\n    return (\n      <Aux>\n        <h3>Your Order</h3>\n        <p>A delicius burger with the following ingredients:</p>\n        <ul>{ingredientSummary}</ul>\n        <p>Continue to Checkout?</p>\n        <p>\n          <strong>Total Price: ${this.props.price.toFixed(2)}</strong>\n        </p>\n        <Button btnType='Danger' clicked={this.props.purchaseCancelled}>\n          CANCEL\n        </Button>\n        <Button btnType='Success' clicked={this.props.purchaseContinueHandler}>\n          CONTINUE\n        </Button>\n      </Aux>\n    );\n  }\n}\n\nexport default OrderSummary;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\nimport * as actions from '../../store/actions/index';\n\nclass BurgerBuilder extends Component {\n  // constructor(props){\n  //   super(props);\n  //   this.state = {}\n  // }\n\n  state = {\n    purchasing: false\n  };\n\n  componentDidMount() {\n    this.props.onInitIngredients();\n  }\n\n  // addIngredientHandler = type => {\n  //   const oldCount = this.state.ingredients[type];\n  //   const updatedCounted = oldCount + 1;\n  //   const updatedIngredients = {\n  //     ...this.state.ingredients\n  //   };\n  //   updatedIngredients[type] = updatedCounted;\n  //   const newPrice = this.props.price + INGREDIENT_PRICES[type];\n  //   this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n  //   this.updatePurchaseState(updatedIngredients);\n  // };\n\n  // removeIngredientHandler = type => {\n  //   const oldCount = this.state.ingredients[type];\n\n  //   if (oldCount <= 0) {\n  //     return;\n  //   }\n\n  //   const updatedCounted = oldCount - 1;\n  //   const updatedIngredients = {\n  //     ...this.state.ingredients\n  //   };\n  //   updatedIngredients[type] = updatedCounted;\n  //   const newPrice = this.props.price - INGREDIENT_PRICES[type];\n  //   this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n  //   this.updatePurchaseState(updatedIngredients);\n  // };\n\n  purchaseHandler = () => {\n    if (this.props.isAuthenticated) {\n      this.setState({ purchasing: true });\n    } else {\n      this.props.onSetAuthRedirectPath('/checkout');\n      this.props.history.push('/auth');\n    }\n  };\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients)\n      .map(igKey => {\n        return ingredients[igKey];\n      })\n      .reduce((sum, el) => sum + el, 0);\n\n    return sum > 0;\n  }\n\n  purchaseCancelHandler = () => {\n    this.setState({ purchasing: false });\n  };\n\n  purchaseContinueHandler = () => {\n    this.props.onInitPurchase();\n    this.props.history.push('/checkout');\n  };\n\n  render() {\n    const disabledInfo = {\n      ...this.props.ings\n    }; // copying the ingredients in inmutable way\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n    let orderSummary = null;\n\n    let burger = this.props.error ? (\n      <p>ingredients can't be loaded!! </p>\n    ) : (\n      <Spinner />\n    );\n\n    if (this.props.ings) {\n      burger = (\n        <Aux>\n          <Burger ingredients={this.props.ings} />\n          <BuildControls\n            isAuth={this.props.isAuthenticated}\n            ingredientAdded={this.props.onIngredientAdded}\n            ingredientRemoved={this.props.onIngredientRemoved}\n            disabled={disabledInfo}\n            purchasable={this.updatePurchaseState(this.props.ings)}\n            price={this.props.price}\n            ordered={this.purchaseHandler}\n          />\n        </Aux>\n      );\n      orderSummary = (\n        <OrderSummary\n          ingredients={this.props.ings}\n          price={this.props.price}\n          purchaseCancelled={this.purchaseCancelHandler}\n          purchaseContinueHandler={this.purchaseContinueHandler}\n        />\n      );\n    }\n\n    return (\n      <Aux>\n        <Modal\n          show={this.state.purchasing}\n          modalClosed={this.purchaseCancelHandler}\n        >\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    error: state.burgerBuilder.error,\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch(actions.addIngredient(ingName)),\n    onIngredientRemoved: ingName => dispatch(actions.removeIngredient(ingName)),\n    onInitIngredients: () => dispatch(actions.initIngredients()),\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\n    onSetAuthRedirectPath: path => dispatch(actions.setAuthRedirectPath(path))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(BurgerBuilder, axios));\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport * as actions from '../../../store/actions/index';\nimport { connect } from 'react-redux';\n\nclass Logout extends Component {\n  componentDidMount() {\n    this.props.onLogout();\n  }\n  render() {\n    return <Redirect to='/'></Redirect>;\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogout: () => dispatch(actions.logout())\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Logout);\n","import React, { Component } from 'react';\n\nconst asyncComponent = importComponent => {\n  return class extends Component {\n    state = { component: null };\n    componentDidMount() {\n      importComponent().then(cmp => {\n        this.setState({ component: cmp.default });\n      });\n    }\n    render() {\n      const C = this.state.component;\n\n      return C ? <C {...this.props} /> : null;\n    }\n  };\n};\n\nexport default asyncComponent;\n","import React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\n\nconst asyncAuth = asyncComponent(() => import('./containers/Auth/Auth'));\nconst asyncCheckout = asyncComponent(() =>\n  import('./containers/Checkout/Checkout')\n);\nconst asyncOrders = asyncComponent(() => import('./containers/Orders/Orders'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignUp();\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path='/' exact component={BurgerBuilder} />\n        <Route path='/auth' component={asyncAuth} />\n\n        <Redirect to='/'></Redirect>\n      </Switch>\n    );\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path='/checkout' component={asyncCheckout} />\n          <Route path='/orders' component={asyncOrders} />\n          <Route path='/auth' component={asyncAuth} />\n\n          <Route path='/logout' component={Logout} />\n          <Route path='/' exact component={BurgerBuilder} />\n          <Redirect to='/'></Redirect>\n          {/* redirect any unknown URL to the home page */}\n        </Switch>\n      );\n    }\n\n    return <Layout>{routes}</Layout>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignUp: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(App)\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false,\n  building: false\n};\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst addIngredient = (state, action) => {\n  const updatedIngredient = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n  };\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedState);\n};\n\nconst removeIngredient = (state, action) => {\n  const updatedIng = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n  };\n  const updatedIngs = updateObject(state.ingredients, updatedIng);\n  const updatedSt = {\n    ingredients: updatedIngs,\n    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedSt);\n};\n\nconst setIngredient = (state, action) => {\n  const error = action.ingredients !== undefined ? false : true;\n  return updateObject(state, {\n    ingredients: {\n      salad: action.ingredients.salad,\n      bacon: action.ingredients.bacon,\n      cheese: action.ingredients.cheese,\n      meat: action.ingredients.meat\n    },\n    totalPrice: initialState.totalPrice,\n    error: error,\n    building: false\n  });\n};\n\nconst fetchIngredientsFailed = (state, action) => {\n  return updateObject(state, { error: true });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return addIngredient(state, action);\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return removeIngredient(state, action);\n\n    case actionTypes.SET_INGREDIENTS:\n      return setIngredient(state, action);\n\n    case actionTypes.FETCH_INGREDIENT_FAILED:\n      return fetchIngredientsFailed(state, action);\n\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst purchaseInit = (state, action) => {\n  return updateObject(state, { purchased: false });\n};\n\nconst purchaseBurgerStart = (state, action) => {\n  return updateObject(state, { loading: true });\n};\n\nconst purchaseBurgerSuccess = (state, action) => {\n  const newOrder = updateObject(action.orderData, { id: action.orderId });\n\n  return updateObject(state, {\n    loading: false,\n    purchased: true,\n    orders: state.orders.concat(newOrder)\n  });\n};\n\nconst purchaseBurgerFailed = (state, action) => {\n  return updateObject(state, { loading: false });\n};\n\nconst fetchOrdersStart = (state, action) => {\n  return updateObject(state, { loading: true });\n};\n\nconst fetchOrdersSuccess = (state, action) => {\n  return updateObject(state, { orders: action.orders, loading: false });\n};\n\nconst fetchOrdersFailed = (state, action) => {\n  return updateObject(state, { loading: false });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n      return purchaseInit(state, action);\n\n    case actionTypes.PURCHASE_BURGER_START:\n      return purchaseBurgerStart(state, action);\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      return purchaseBurgerSuccess(state, action);\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return purchaseBurgerFailed(state, action);\n\n    case actionTypes.FETCH_ORDERS_START:\n      return fetchOrdersStart(state, action);\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return fetchOrdersSuccess(state, action);\n\n    case actionTypes.FETCH_ORDERS_FAIL:\n      return fetchOrdersFailed(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  loading: false,\n  authRedirectPath: '/'\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true });\n};\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false\n  });\n};\nconst authFail = (state, action) => {\n  return updateObject(state, { error: action.error, loading: false });\n};\nconst authLogout = (state, action) => {\n  return updateObject(state, { token: null, userId: null });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n  return updateObject(state, { authRedirectPath: action.path });\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers =\n  process.env.NODE_ENV === 'development'\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose; //try to find redux_devtool or simply default to redux compose without devtools functionality\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}